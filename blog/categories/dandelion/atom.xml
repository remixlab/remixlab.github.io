<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Dandelion, | RemixLab]]></title>
  <link href="http://remixlab.github.io/blog/categories/dandelion/atom.xml" rel="self"/>
  <link href="http://remixlab.github.io/"/>
  <updated>2013-11-23T15:00:36-05:00</updated>
  <id>http://remixlab.github.io/</id>
  <author>
    <name><![CDATA[RemixLab]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dandelion Matrices Handling]]></title>
    <link href="http://remixlab.github.io/blog/2013/11/23/dandelion-matrices-handling/"/>
    <updated>2013-11-23T14:55:28-05:00</updated>
    <id>http://remixlab.github.io/blog/2013/11/23/dandelion-matrices-handling</id>
    <content type="html"><![CDATA[<p>Any third party framework willing to use 
<a href="https://github.com/remixlab/dandelion">Dandelion</a> should at least:</p>

<ol>
  <li>Implement visual hints, such as the displaying of the axes and the grid.</li>
  <li>Define how transformation matrices should be handled.</li>
</ol>

<p>This post describe how these two tasks are carried out in ProScene2, allowing
Processing to take full advantage of the Dandelion framework.</p>

<h1 id="visual-hints-in-proscene2">Visual hints in Proscene2</h1>

<p>All Dandelion visual hints are defined by the VisualHintable interface. Since 
some of the ProScene2 splits the implementation </p>

<p>provides P5Drawing2D P5Drawing3D</p>

<h1 id="transformations-matrices">Transformations matrices</h1>

<p>Connect dandelion to other framworks such as Processing.</p>

<h1 id="approach">Approach</h1>

<h1 id="examples">Examples</h1>

<ol>
  <li>Java2D</li>
  <li>Target application has its own matrix stack</li>
  <li>Target application misses matrix stack</li>
</ol>
]]></content>
  </entry>
  
</feed>
